helmDefaults:
  createNamespace: {{ default false (eq (env "CREATE_NAMESPACE") "true") }}

# Keycloak config:
# Prefix of the Keycloak URL
{{- $KEYCLOAK_PREFIX := (coalesce (env "KEYCLOAK_PREFIX") "authkc") }}
# The Keycloak URL
{{- $KEYCLOAK_URL := (printf "https://%s/%s" (requiredEnv "DEPLOY_HOST") ($KEYCLOAK_PREFIX)) }}
# The Auth issuer for user accounts
{{- $AUTH_ISSUER_USERS := (printf "%s/realms/%s" ($KEYCLOAK_URL) (coalesce (env "USER_REALM") "sprout-users")) }}
# The Auth issuer for organization accounts
{{- $AUTH_ISSUER_ORGS := (printf "%s/realms/%s" ($KEYCLOAK_URL) (coalesce (env "ORGS_REALM") "sprout-orgs")) }}

repositories:
- name: onechart
  url: https://chart.onechart.dev
- name: bitnami
  url: https://charts.bitnami.com/bitnami

releases:
- name: backend
  namespace: sprout
  chart: onechart/onechart
  values:
  - image:
      repository: ghcr.io/{{ requiredEnv "REPO_FULLNAME" | lower }}/backend
    # HACK: Instead of updating the version, recreate the container and pull latest
      tag: latest
      pullPolicy: Always
    podLabels:
      date: {{ now | unixEpoch | quote }}
    # ---
    {{- if (env "PULL_SECRETS") }}
    imagePullSecrets:
    {{- range ( split "," (env "PULL_SECRETS") ) }}
      - {{ . }}
    {{- end }}
    {{- end }}
    secretName: sprout-backend-secret
    vars:
      DB_DATABASE: sprout
      DB_USER: sprout
      DB_PORT: 5432
      DB_HOST: sprout-db
      PORT: 8080
      ORIGIN: {{ requiredEnv "DEPLOY_HOST" | quote }}
      BASE_PATH: /api
      AUTH_ISSUER_USERS: {{ $AUTH_ISSUER_USERS | quote }}
      AUTH_ISSUER_ORGS: {{ $AUTH_ISSUER_ORGS | quote }}
    containerPort: 8080
    ingress:
      host: {{ requiredEnv "DEPLOY_HOST" | quote }}
      path: /api
    resources:
      limits:
        cpu: "1"
        memory: "1Gi"
      requests:
        cpu: "500m"
        memory: "512Mi"
    probe:
      enabled: true
      path: "/actuator/health"
  needs:
  - secrets
- name: database
  namespace: sprout
  chart: bitnami/postgresql
  values:
  - fullnameOverride: sprout-db
    auth:
      enablePostgresUser: true
      username: sprout
      existingSecret: sprout-database-secret
      database: sprout
    containerPorts:
      postgresql: 5432
    primary:
      initdb:
        scripts:
          # https://github.com/bitnami/charts/issues/9048#issuecomment-1855705696
          postgis.sh: |
            #!/usr/bin/env sh
            export PGPASSWORD="$POSTGRES_POSTGRES_PASSWORD"
            psql -U postgres -d "$POSTGRES_DATABASE" -c "create extension if not exists postgis;"
  needs:
  - secrets
- name: frontend
  namespace: sprout
  chart: onechart/onechart
  values:
  - image:
      repository: ghcr.io/{{ requiredEnv "REPO_FULLNAME" | lower }}/frontend
    # HACK: Instead of updating the version, recreate the container and pull latest
      tag: latest
      pullPolicy: Always
    podLabels:
      date: {{ now | unixEpoch | quote }}
    # ---
    {{- if (env "PULL_SECRETS") }}
    imagePullSecrets:
    {{- range ( split "," (env "PULL_SECRETS") ) }}
      - {{ . }}
    {{- end }}
    {{- end }}
    secretName: sprout-frontend-secret
    vars:
      PORT: 3000
      ORIGIN: {{ requiredEnv "DEPLOY_HOST" | quote }}
      REVERSE_PROXY_ENABLED: true
      BACKEND: "http://backend:8080"
      AUTH_ISSUER_USERS: {{ $AUTH_ISSUER_USERS | quote }}
      AUTH_ISSUER_ORGS: {{ $AUTH_ISSUER_ORGS | quote }}
    containerPort: 3000
    ingress:
      host: {{ requiredEnv "DEPLOY_HOST" | quote }}
      path: /
    resources:
      limits:
        cpu: "1"
        memory: "1Gi"
      requests:
        cpu: "500m"
        memory: "512Mi"
- name: secrets
  namespace: sprout
  chart: ./secrets
- name: auth
  namespace: sprout
  chart: bitnami/keycloak
  values:
  - ingress:
      enabled: true
      pathType: Prefix
      hostname: {{ requiredEnv "DEPLOY_HOST" | quote }}
    httpRelativePath: {{ printf "/%s/" $KEYCLOAK_PREFIX | quote }}
    proxyHeaders: "xforwarded"
    auth:
      adminUser: "admin"
    resources:
      requests:
        cpu: "500m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "1Gi"
